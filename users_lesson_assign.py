# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'new.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import pandas as pd
# merge 왜 안댕~~~
from imports import *
from dialog import *
from data_load import *
import json
import os

# 사용자 지정 창 만들기
class Ui_Lesson_Assign(QDialog):
    def __init__(self):
        super().__init__()
        self.get_init_data()
        self.setupUi()

    # 데이터 불러오기
    def get_init_data(self):
        global tool_button_arr, configData
            # 버튼 관련 설정
        tool_button_arr = [
            ["입력", "img/add_person.png",40, 40, self.writeInfo],
            ["수정", "img/shuffle.png", 40, 40, self.changeInfo],
            ["저장", "img/floppy-disk.png", 40, 40, self.saveInfo],
            ["삭제", "img/delete.png", 40, 40, self.deleteInfo]
        ]

        # 시작, 종료시간 combobox 정보
        global time_start_arr, time_end_arr
        time_start_arr = []
        time_end_arr = []
        for i in range(len(time_list)):
            time_start_arr.append(time_list[i][1])
            time_end_arr.append(time_list[i][2])

        with open("info_type.json", "r") as info:
            configData = json.load(info)


    # 화면 출력
    def setupUi(self):
        self.setObjectName("Dialog")
        self.setFixedSize(818, 676)

        # 그룹박스 만들기
        self.groupBox = QGroupBox(self)
        self.groupBox.setGeometry(QRect(50, 40, 721, 61))

        # 그룹박스 내 layout -> 라디오 버튼 넣으려고
        self.horizontalLayoutWidget = QWidget(self.groupBox)
        self.horizontalLayoutWidget.setGeometry(QRect(110, 20, 491, 22))
        self.horizontalLayoutWidget.setObjectName("horizontalLayoutWidget")
        self.horizontalLayout = QHBoxLayout(self.horizontalLayoutWidget)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setObjectName("horizontalLayout")

        # 라디오 버튼 2개 만들기
        self.radioButton_2 = QRadioButton(self.horizontalLayoutWidget)
        self.radioButton_2.setObjectName("radioButton_2")
        self.horizontalLayout.addWidget(self.radioButton_2, 0, Qt.AlignHCenter)
        self.radioButton = QRadioButton(self.horizontalLayoutWidget)
        self.radioButton.setObjectName("radioButton")
        self.horizontalLayout.addWidget(self.radioButton, 0, Qt.AlignHCenter)


        # 두번째 그룹박스 만들기
        self.groupBox_2 = QGroupBox(self)
        self.groupBox_2.setGeometry(QRect(50, 110, 721, 551))


        # 입력창(교수,강의,시작시간,종료시간 등등 ) 만드려고 그룹박스 내 그리드위젯 만들기
        self.gridLayoutWidget = QWidget(self.groupBox_2)
        self.gridLayoutWidget.setGeometry(QRect(20, 20, 691, 61))
        self.gridLayoutWidget.setObjectName("gridLayoutWidget")
        self.gridLayout_2 = QGridLayout(self.gridLayoutWidget)
        self.gridLayout_2.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_2.setObjectName("gridLayout_2")



        # 교수
        self.label_8 = QLabel(self.gridLayoutWidget)
        self.label_8.setAlignment(Qt.AlignCenter)
        self.label_8.setObjectName("label_8")
        self.gridLayout_2.addWidget(self.label_8, 0, 0, 1, 1)
        # 강의
        self.label_9 = QLabel(self.gridLayoutWidget)
        self.label_9.setAlignment(Qt.AlignCenter)
        self.label_9.setObjectName("label_9")
        self.gridLayout_2.addWidget(self.label_9, 0, 1, 1, 1)
        # 분반
        self.label_6 = QLabel(self.gridLayoutWidget)
        self.label_6.setAlignment(Qt.AlignCenter)
        self.label_6.setObjectName("label_6")
        self.gridLayout_2.addWidget(self.label_6, 0, 2, 1, 1)
        # 요일
        self.label_10 = QLabel(self.gridLayoutWidget)
        self.label_10.setAlignment(Qt.AlignCenter)
        self.label_10.setObjectName("label_10")
        self.gridLayout_2.addWidget(self.label_10, 0, 3, 1, 1)
        # 시작시간
        self.label_7 = QLabel(self.gridLayoutWidget)
        self.label_7.setAlignment(Qt.AlignCenter)
        self.label_7.setObjectName("label_7")
        self.gridLayout_2.addWidget(self.label_7, 0, 4, 1, 1)
        # 종료시간
        self.label_12 = QLabel(self.gridLayoutWidget)
        self.label_12.setAlignment(Qt.AlignCenter)
        self.label_12.setObjectName("label_12")
        self.gridLayout_2.addWidget(self.label_12, 0, 5, 1, 1)
        # 강의실
        self.label_13 = QLabel(self.gridLayoutWidget)
        self.label_13.setAlignment(Qt.AlignCenter)
        self.label_13.setObjectName("label_13")
        self.gridLayout_2.addWidget(self.label_13, 0, 6, 1, 1)

        # 교수 콤보박스
        self.comboBox = QComboBox(self.gridLayoutWidget)
        self.comboBox.setObjectName("comboBox")
        self.gridLayout_2.addWidget(self.comboBox, 1, 0, 1, 1)
        self.comboBox.addItems(professor_df['성명'])
        # 강의 콤보박스
        self.comboBox_2 = QComboBox(self.gridLayoutWidget)
        self.comboBox_2.setObjectName("comboBox_2")
        self.gridLayout_2.addWidget(self.comboBox_2, 1, 1, 1, 1)
        self.comboBox_2.addItems(lesson_df['강좌명'])
        # 분반
        self.lineEdit_8 = QLineEdit(self.gridLayoutWidget)
        self.lineEdit_8.setObjectName("lineEdit_8")
        self.gridLayout_2.addWidget(self.lineEdit_8, 1, 2, 1, 1)
        # 요일
        self.lineEdit_9 = QLineEdit(self.gridLayoutWidget)
        self.lineEdit_9.setObjectName("lineEdit_9")
        self.gridLayout_2.addWidget(self.lineEdit_9, 1, 3, 1, 1)
        # 시작 콤보박스
        self.comboBox_3 = QComboBox(self.gridLayoutWidget)
        self.comboBox_3.setObjectName("comboBox_3")
        self.gridLayout_2.addWidget(self.comboBox_3, 1, 4, 1, 1)
        self.comboBox_3.addItems(time_start_arr)
        # 종료 콤보박스
        self.comboBox_4 = QComboBox(self.gridLayoutWidget)
        self.comboBox_4.setObjectName("comboBox_4")
        self.gridLayout_2.addWidget(self.comboBox_4, 1, 5, 1, 1)
        self.comboBox_4.addItems(time_end_arr)
        # 강의실
        self.lineEdit_11 = QLineEdit(self.gridLayoutWidget)
        self.lineEdit_11.setObjectName("lineEdit_11")
        self.gridLayout_2.addWidget(self.lineEdit_11, 1, 6, 1, 1)




        # 테이블 위젯 만들기( 목록 띄우기 위함 )
        self.tableWidget =QTableWidget(self.groupBox_2)
        self.tableWidget.setGeometry(QRect(30, 90, 571, 440))
        self.tableWidget.setObjectName("tableWidget")
        # 행과 열 만들기
        self.tableWidget.setColumnCount(7)
        self.tableWidget.setRowCount(50)
        # 테이블위젯 이름 넣으려고 만듬
        item = QTableWidgetItem() # 교수
        self.tableWidget.setHorizontalHeaderItem(0, item)
        item = QTableWidgetItem() # 강의
        self.tableWidget.setHorizontalHeaderItem(1, item)
        item = QTableWidgetItem() # 시간
        self.tableWidget.setHorizontalHeaderItem(2, item)
        item = QTableWidgetItem() # 요일
        self.tableWidget.setHorizontalHeaderItem(3, item)
        item =QTableWidgetItem() # 시작시간
        self.tableWidget.setHorizontalHeaderItem(4, item)
        item = QTableWidgetItem()  # 종료시간
        self.tableWidget.setHorizontalHeaderItem(5, item)
        item = QTableWidgetItem()  # 강의실
        self.tableWidget.setHorizontalHeaderItem(6, item)
        self.tableWidget.horizontalHeader().setDefaultSectionSize(81)
        self.tableWidget.verticalHeader().hide()


        # 사용자 지정 배정 라벨
        self.label_11 = QLabel()
        self.label_11.setGeometry(QRect(5, 20, 151, 16))
        self.label_11.setObjectName("label_11")


        # 아이콘 배열
        self.verticalLayoutWidget = QWidget(self.groupBox_2)
        self.verticalLayoutWidget.setGeometry(QRect(640, 85, 111, 451))
        self.verticalLayoutWidget.setObjectName("verticalLayoutWidget")
        self.verticalLayout = QVBoxLayout(self.verticalLayoutWidget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        for i in range(len(tool_button_arr)):
            self.toolButton = QToolButton(self.verticalLayoutWidget)
            global_funtion.tool_button_setting_widget(self, self.toolButton, self.verticalLayout, tool_button_arr[i])


        # 텍스트 출력
        self.retranslateUi()

        # 라디오 버튼 연결시키기
        self.radioButton.toggled.connect(self.onClicked)
        self.radioButton_2.toggled.connect(self.onClicked2)
        self.radioButton_2.click()

    # 대학원 라디오 버튼 연결 ( 대학원 데이터 불러오기 )
    def onClicked(self):
        global df
        radioBtn=self.sender()
        if radioBtn.isChecked():
            self.tableWidget.setRowCount(0)
            # 대학원 파일을 불러온다
            df = lesson_assign_df[lesson_assign_df['대상학과'].str.contains('대학원')]
            df = df.reset_index()[['교수명','강좌명','분반','요일','시간ID','강의실명']]
            # 시간 id 중 가장 작은 숫자에 해당하는 time 시작시간으로 불러오기
            start=time_df.iloc[df['시간ID'].str.split(',').str[0]]['시작시간']
            start=start.reset_index()['시작시간']
            df=pd.concat([df, start], axis=1)
            # 시간 id 중 가장 큰 숫자에 해당하는 time 종료시간으로 불러오기
            finish = time_df.iloc[df['시간ID'].str.split(',').str[-1]]['종료시간']
            finish = finish.reset_index()['종료시간']
            df = pd.concat([df, finish], axis=1)
            df=df[['교수명','강좌명','분반','요일','시작시간','종료시간','강의실명']]
            print(df)
            print(len(df))
            print(len(df.columns))
            # 테이블 위젯에 데이터 집어넣기
            for i in range(len(df)):
                row = self.tableWidget.rowCount()
                self.tableWidget.insertRow(row)
                for j in range(len(df.columns)):
                     self.tableWidget.setItem(i,j,QTableWidgetItem(str(df.iloc[i,j])))

    # 학부 라디오 버튼 연결 ( 학부 데이터 불러오기 )
    def onClicked2(self):
        global df2
        radioBtn2=self.sender()
        if radioBtn2.isChecked():
            self.tableWidget.setRowCount(0)
            # 학부 파일을 불러온다
            df2 = lesson_assign_df[~lesson_assign_df['대상학과'].str.contains('대학원')]
            df2 = df2.reset_index()[['교수명', '강좌명','분반', '요일', '시간ID', '강의실명']]
            # 시간 id 중 가장 작은 숫자에 해당하는 time 시작시간으로 불러오기
            start2 = time_df.iloc[df2['시간ID'].str.split(',').str[0]]['시작시간']
            start2 = start2.reset_index()['시작시간']
            df2 = pd.concat([df2, start2], axis=1)
            # 종료 id 중 가장 큰 숫자에 해당하는 time 종료시간으로 불러오기
            finish2 = time_df.iloc[df2['시간ID'].str.split(',').str[-1]]['종료시간']
            finish2 = finish2.reset_index()['종료시간']
            df2 = pd.concat([df2, finish2], axis=1)
            df2 = df2[['교수명', '강좌명', '분반', '요일', '시작시간', '종료시간', '강의실명']]
            # print(df2)
            # 테이블 위젯에 데이터 집어넣기
            for i in range(len(df2)):
                row = self.tableWidget.rowCount()
                self.tableWidget.insertRow(row)
                for j in range(len(df2.columns)):
                    self.tableWidget.setItem(i, j, QTableWidgetItem(str(df2.iloc[i, j])))

    # 텍스트 출력
    def retranslateUi(self):
        _translate = QCoreApplication.translate
        self.setWindowTitle(_translate("Dialog", "사용자 지정 배정"))
        self.radioButton.setText(_translate("Dialog", "대학원"))
        self.radioButton_2.setText(_translate("Dialog", "학부"))
        self.label_6.setText(_translate("Dialog", "분반"))
        self.label_7.setText(_translate("Dialog", "시작시간"))
        self.label_8.setText(_translate("Dialog", "교수"))
        self.label_9.setText(_translate("Dialog", "강의"))
        self.label_10.setText(_translate("Dialog", "요일"))
        self.label_11.setText(_translate("Dialog", "사용자지정 배정"))
        self.label_12.setText(_translate("Dialog", "종료시간"))
        self.label_13.setText(_translate("Dialog", "강의실"))
        item = self.tableWidget.horizontalHeaderItem(0)
        item.setText(_translate("Dialog", "교수"))
        item = self.tableWidget.horizontalHeaderItem(1)
        item.setText(_translate("Dialog", "강의"))
        item = self.tableWidget.horizontalHeaderItem(2)
        item.setText(_translate("Dialog", "분반"))
        item = self.tableWidget.horizontalHeaderItem(3)
        item.setText(_translate("Dialog", "요일"))
        item = self.tableWidget.horizontalHeaderItem(4)
        item.setText(_translate("Dialog", "강의실"))
        item = self.tableWidget.horizontalHeaderItem(5)
        item.setText(_translate("Dialog", "시작시간"))
        item = self.tableWidget.horizontalHeaderItem(6)
        item.setText(_translate("Dialog", "종료시간"))


    def saveInfo(self):
        print("")

    def deleteInfo(self):
        print("")

    # 입력하기
    def writeInfo(self):
        global write_data , lesson_assign_df
        # array에 현재 해당하는 교수, 강의명 입력
        write_data=[]
        write_data.append(self.comboBox.currentText())
        write_data.append(self.comboBox_2.currentText())
        # 종료 index에서 시작 Index까지의 값 담기
        time = []
        start = self.comboBox_3.currentIndex()
        end = self.comboBox_4.currentIndex()
        for i in range(end - start):
            time.append(i)
        write_data.append(str(time)[1:-1])
        # print(write_data)
        write_data = pd.DataFrame([write_data], columns=['교수명', '강좌명','시간ID'])
        lesson_assign_df=pd.concat([lesson_assign_df,write_data] , axis=0)
        lesson_assign_df.to_excel('data/lesson_assign.xlsx', index=False)
        global_funtion().message_box_1(QMessageBox.Information, "정보", "입력되었습니다", "확인")

        # print(time)
        # #print(write_data)
        # #print(lesson_assign_df)



    def changeInfo(self):
        print("")

if __name__ == "__main__":
    import sys
    app = QApplication(sys.argv)
    Dialog = QDialog()
    ui = Ui_Dialog()
    ui.setupUi()
    ui.show()
    app.exec_()
